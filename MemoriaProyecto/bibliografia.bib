@book{koza92,
		author    = "Koza, John R.",
		title     = "Genetic Programming: On the Programming of Computers by Means of Natural Selection",
		publisher = "MIT Press",
		year      = "1992"
}


@misc{ wiki:latex,
       author = "Wikipedia",
       title = "LaTeX --- Wikipedia{,} La enciclopedia libre",
       year = "2015",
       url = "https://es.wikipedia.org/w/index.php?title=LaTeX&oldid=84209252",
       note = "[Internet; descargado 30-septiembre-2015]"
}


@article{bortolot2005,
  title={Estimating forest biomass using small footprint LiDAR data: An individual tree-based approach that incorporates training data},
  author={Bortolot, Zachary J and Wynne, Randolph H},
  journal={ISPRS Journal of Photogrammetry and Remote Sensing},
  volume={59},
  number={6},
  pages={342--360},
  year={2005},
  publisher={Elsevier}
}


@misc{noauthor_miguel_nodate,
	title = {Miguel Ángel {León} {Bardavío} / comparador-de-metricas-de-evolucion-en-repositorios-software},
	url = {https://gitlab.com/mlb0029/comparador-de-metricas-de-evolucion-en-repositorios-software},
	abstract = {Aplicación Java que toma como entrada un conjunto de direcciones de repositorios públicos o privados y calcula medidas de la evolución que permiten comparar los repositorios.},
	language = {en},
	journal = {GitLab}
}

@misc{noauthor_zotero_nodate,
	title = {Zotero {\textbar} {People} {\textgreater} mlb0029 {\textgreater} {Library}},
	url = {https://www.zotero.org/mlb0029/items}
}

@inproceedings{lopez_gestion_2008,
	title = {Gestión de {Trabajos} {Fin} de {Carrera}},
	abstract = {El desarrollo de trabajos final de carrera en las actuales titulaciones de informática es una de las materias fundamentales a la conclusión de los estudios. En las propuestas de grado y máster este punto sigue siendo fundamental, no existiendo apenas discusión en la necesidad de realizar un proyecto, donde se aglutinen todos los conocimientos y competencias, que han sido adquiridos a lo largo de los estudios realizados. Sin embargo, la gestión y desarrollo de esta asignatura tiene unas características muy particulares: alto grado de profesorado involucrado, tutorías personalizadas, contenidos personalizados, etc. Por otro lado, la gestión de proyectos es un tema ampliamente tratado en Ingeniería del Software con gran cantidad de tareas asociadas. En este trabajo, se propone un modelo de gestión de la asignatura dentro de un contexto universitario, aplicando buenas prácticas de ingeniería del software: monitorización y control de proceso, revisiones y evaluación, medición. A partir de dicho planteamiento se muestran los resultados de su aplicación dentro de un contexto universitario concreto, utilizando datos desde el curso 2002-03 hasta el actual.},
	booktitle = {Actas de {X} {Simposio} {Internacional} de {Informática} {Educativa}. {Salamanca}. {ISBN}: 978-84-7800-312-9},
	author = {López, Carlos and Marticorena, Raúl and Rodríguez, Juan José},
	month = oct,
	year = {2008},
	pages = {6}
}

@incollection{marticorena_inclusion_2006,
	series = {Espacio {Europeo} de {Educación} {Superior}. {Contexto} y {Realidad} en la {Comunidad} {Autónoma} de {Castilla} y {León}.{ISBN} 978-84-7800-436-2},
	title = {Inclusión de {Patrones} de {Diseño} en un {Plan} de {Estudios} de {Ingeniería} {Técnica} en {Informática}},
	abstract = {El presente trabajo define una propuesta de la inclusión del concepto de patrón de diseño en la titulación de Ingeniería Técnica en Informática de Gestión (ITIG), estableciendo los niveles de desarrollo a tratar en las asignaturas tipo de esta titulación, con vistas a una futura conversión hacia el Espacio Europeo de Educación Superior y su adecuación al nuevo sistema de créditos ECTS. La utilización de patrones de diseño tiene dos aspectos claramente diferenciados: uno relacionado con la aplicación del patrones y otro relacionado con la búsqueda y selección de un patrón que resuelva un determinado problema. El trabajo se basa en esta diferenciación de aspectos para distribuir las responsabilidades entre las diferentes asignaturas del plan de estudios. Uno de los múltiples objetivos de las asignaturas de programación es la presentación del concepto patrón de diseño y su aplicación por parte de los alumnos, de un conjunto limitado de patrones de diseño. Debido a la amplia cantidad de contenidos que se puede añadir a este tipo de asignaturas, se debe establecer un plan estratégico para poder presentar adecuadamente los patrones y la aplicación práctica de los mismos, siempre bajo un intento de motivar al alumno y con un pequeño coste de aprendizaje. Se establece una propuesta de definición de un plan estratégico, una aplicación de ese plan en asignaturas de ingeniería del software y programación, más particularmente en asignaturas de programación de nivel II y III, mostrando finalmente la experiencia previa de dicho trabajo en la Universidad de Burgos y concluyendo con una propuesta para la incorporación inmediata y adecuada de dichos temas al nuevo proceso de convergencia.},
	publisher = {Ediciones Universidad de Salamanca. Colección Aquilafuente, Nº 101},
	author = {Marticorena, Raúl and López, Carlos},
	year = {2006},
	pages = {17}
}

@inproceedings{marticorena_soporte_2005,
	title = {Soporte de {Métricas} con {Independencia} del {Lenguaje} para la {Inferencia} de {Refactorizaciones}},
	url = {http://giro.infor.uva.es/Publications/2005/MCL05},
	booktitle = {X {Jornadas} {Ingenieria} del {Software} y {Bases} de {Datos} ({JISBD} 2005), {Granada}, {Spain} {ISBN}: 84-9732-434-{X}},
	author = {Marticorena, Raúl and Crespo, Yania and López, Carlos},
	month = sep,
	year = {2005},
	pages = {59--66}
}

@article{lopez_evaluacion_2009,
	title = {Evaluación de código mediante múltiples intervalos de métricas},
	volume = {6},
	issn = {1698-2029},
	url = {http://www.aemes.org/rpm/contenidos/articulos.php},
	abstract = {La evolución y mantenimiento del código incorporan en su proceso actividades de medición para detectar posibles defectos y proponer mejoras. Una manera de detectar anomalías sobre entidades de código se basa en comprobar que el valor de una métrica está fuera de un intervalo de valores recomendados. En este sentido, desde la década de los 90, existen multitud de trabajos que proponen de manera empírica intervalos recomendables para un conjunto de las mismas. Una de las críticas expuesta en la literatura a este planteamiento es la dificultad de transportar estos resultados a otros contextos. La determinación de los valores que comprenden el intervalo puede estar condicionada por múltiples variables, entre ellas la relacionada con la naturaleza del problema que resuelve: excepciones, interfaces gráficas, modelo, controladores y pruebas. Esta información puede ser incorporada por el usuario en el proceso de medición, transformándolo en semiautomático. Para corroborar esta hipótesis, en este trabajo se define un caso de estudio donde el proceso de medición es guiado por el inspector/ evaluador, que clasifica las entidades de código a medir dependiendo su naturaleza. Como resultado del caso de estudio se proponen unos intervalos relativos a las métricas para los diferentes tipos y relativos a una organización concreta.},
	number = {1},
	journal = {Revista de Procesos y MÉtricas},
	author = {López, Carlos and Crespo, Yania and Manso, Esperanza and Marticorena, Raúl},
	month = jul,
	year = {2009},
	pages = {19--30}
}

@inproceedings{lopez_identification_2010,
	title = {The identification of anomalous code measures with conditioned interval metrics},
	booktitle = {13th {TOOLS} {Workshop} on {Quantitative} {Approaches} in {Object}-{Oriented} {Software} {Engineering} ({QAOOSE} 2010)},
	author = {López, Carlos and Manso, Esperanza and Crespo, Yania},
	year = {2010}
}

@inproceedings{lopez_caso_2011,
	title = {Un caso de estudio sobre la identificación de valores umbrales para medidas de código},
	url = {http://www.sistedes.es/jornadas2011/jisbd.htm},
	booktitle = {{XVI} {Jornadas} de {Ingeniería} del {Software} y {Bases} de {Datos}.. {La} {Coruña}. {ISBN}: 978-84-9749-486-1.},
	author = {López, Carlos and Manso, Esperanza and Crespo, Yania},
	year = {2011},
	pages = {471--485}
}

@book{stelting_patrones_2003,
	address = {Madrid},
	title = {Patrones {De} {Diseño} {Aplicados} a {Java}},
	isbn = {84-205-3839-6},
	publisher = {Pearson Educación},
	author = {Stelting, Stephen},
	year = {2003},
	keywords = {Java (Llenguatge de programa, Patrons de programes d'ord}
}

@book{gamma_patrones_2002,
	address = {Madrid},
	edition = {1 ed. en es},
	title = {Patrones {De} {Diseño}: {Elementos} {De} {Software} {Orientado} a {Objetos} {Reutilizable}},
	isbn = {84-7829-059-1},
	publisher = {Addison-Wesley},
	author = {Gamma, E. and Helm, R. and Johnson, R. and Vlissides, J.},
	year = {2002},
	keywords = {Programas y sistemas de programaciâon-, rrollo⬚04 Programaciâon orientada al objeto (In}
}

@book{horstmann_core_2008,
	edition = {8},
	title = {Core {Java}, {Vol}. 2: {Advanced} {Features}, 8th {Edition}},
	isbn = {0-13-235479-9},
	shorttitle = {Core {Java}, {Vol}. 2},
	publisher = {Prentice Hall},
	author = {Horstmann, Cay S. and Cornell, Gary},
	year = {2008}
}

@book{noauthor_git_nodate,
	title = {Git {Hub} {Ejemplos} java-design-patterns},
	url = {https://github.com/iluwatar/java-design-patterns}
}

@book{berczuk_software_2002,
	address = {Boston},
	edition = {Edición: 01},
	title = {Software {Configuration} {Management} {Patterns}: {Effective} {Teamwork}, {Practical} {Integration}},
	isbn = {978-0-201-74117-9},
	shorttitle = {Software {Configuration} {Management} {Patterns}},
	abstract = {Stereotypes portray software engineers as a reckless lot, and stereotypes paint software configuration management (SCM) devotees as inflexible. Based on these impressions, it is no wonder that projects can be riddled with tension! The truth probably lies somewhere in between these stereotypes, and this book shows how proven SCM practices can foster a healthy team-oriented culture that produces better software. The authors show that workflow, when properly managed, can avert delays, morale problems, and cost overruns. A patterns approach (proven solutions to recurring problems) is outlined so that SCM can be easily applied and successfully leveraged in small to medium sized organizations. The patterns are presented with an emphasis on practicality. The results speak for themselves: improved processes and a motivated workforce that synergize to produce better quality software.},
	language = {Inglés},
	publisher = {ADDISON WESLEY LONGMAN INC DIV PEARSON SUITE 300},
	author = {Berczuk, Steve and Appleton, Brad},
	month = nov,
	year = {2002}
}

@book{grand_patterns_1998,
	address = {New York [etc.]},
	series = {Wiley computer publishing},
	title = {Patterns in {Java}. {Volumen} 1. {A} {Catalog} of {Reusable} {Design} {Patterns} {Illustrated} with {UML}},
	isbn = {0-471-25839-3},
	publisher = {John Wiley and Sons},
	author = {Grand, Mark},
	year = {1998},
	keywords = {JAVA (Lenguaje de programaciâo}
}

@book{noauthor_github_nodate,
	title = {{GitHub} {API} v3},
	url = {https://developer.github.com/v3/}
}

@article{storey_how_2009,
	title = {How {Software} {Developers} {Use} {Tagging} to {Support} {Reminding} and {Refinding}},
	volume = {35},
	issn = {0098-5589},
	doi = {10.1109/TSE.2009.15},
	abstract = {Developers frequently add annotations to source code to help them remember pertinent information and mark locations of interest for future investigation. Finding and refinding these notes is a form of navigation that is integral to software maintenance. Although there is some tool support in modern development environments for authoring and navigating these comments, we have observed that these annotations often fail to remind and are sometimes difficult to find by the programmer. To address these shortcomings, we have designed a new approach for software navigation called tags for software engineering activities (TagSEA). TagSEA combines the notion of waypointing (a mechanism for marking locations in spatial navigation) with social tagging to support programmers in defining semantically rich annotations to source code comments. The tool provides support for creating, editing, navigating, and managing these annotations. We present the results from two empirical studies, where we observed and then analyzed how professional programmers used source code annotations to support their development activities over 24 months. Our findings indicate that the addition of semantic information to annotations can improve their value. We also provide suggestions on how annotation tools in general may be improved.},
	number = {4},
	journal = {IEEE Transactions on Software Engineering},
	author = {Storey, M. A. and Ryall, J. and Singer, J. and Myers, D. and Cheng, L. T. and Muller, M.},
	month = jul,
	year = {2009},
	keywords = {Annotations, authoring systems, modern development environments, social tagging, software development tools, software development tools., software engineering activities, software maintenance, software navigation, software tagging, source code annotations, tags, waypointing},
	pages = {470--483}
}

@inproceedings{cabot_exploring_2015,
	title = {Exploring the use of labels to categorize issues in {Open}-{Source} {Software} projects},
	doi = {10.1109/SANER.2015.7081875},
	abstract = {Reporting bugs, asking for new features and in general giving any kind of feedback is a common way to contribute to an Open-Source Software (OSS) project. This feedback is generally reported in the form of new issues for the project, managed by the so-called issue-trackers. One of the features provided by most issue-trackers is the possibility to define a set of labels/tags to classify the issues and, at least in theory, facilitate their management. Nevertheless, there is little empirical evidence to confirm that taking the time to categorize new issues has indeed a beneficial impact on the project evolution. In this paper we analyze a population of more than three million of GitHub projects and give some insights on how labels are used in them. Our preliminary results reveal that, even if the label mechanism is scarcely used, using labels favors the resolution of issues. Our analysis also suggests that not all projects use labels in the same way (e.g., for some labels are only a way to prioritize the project while others use them to signal their temporal evolution as they move along in the development workflow). Further research is needed to precisely characterize these label “families” and learn more the ideal application scenarios for each of them.},
	booktitle = {2015 {IEEE} 22nd {International} {Conference} on {Software} {Analysis}, {Evolution}, and {Reengineering} ({SANER})},
	author = {Cabot, J. and Izquierdo, J. L. Cánovas and Cosentino, V. and Rolandi, B.},
	month = mar,
	year = {2015},
	keywords = {Clustering algorithms, Correlation, Documentation, GitHub projects, OSS project, Project management, Sociology, Software, Tagging, bugs reporting, development workflow, feedback report, issue-trackers, issues categorization, issues classification, label families, label mechanism, labels/tags, open-source software projects, program debugging, project evolution, public domain software, software development management, software maintenance},
	pages = {550--554}
}

@phdthesis{ratzinger_space:_2007,
	type = {{PhD} {Thesis}},
	title = {{sPACE}: {Software} {Project} {Assessment} in the {Course} of {Evolution}},
	url = {http://www.inf.usi.ch/jazayeri/docs/Thesis_Jacek_Ratzinger.pdf},
	author = {Ratzinger, Jacek},
	year = {2007},
	keywords = {metrics, refactoring}
}

@book{sommerville_software_2016,
	title = {Software {Engineering}, {Global} {Edition}},
	isbn = {978-1-292-09614-8},
	url = {https://books.google.es/books?id=W_LjCwAAQBAJ},
	publisher = {Pearson Education Limited},
	author = {Sommerville, I.},
	year = {2016}
}

@book{sommerville_ingenierisoftware_2002,
	address = {México},
	edition = {6ª},
	title = {Ingeniería de software},
	isbn = {970-26-0206-8},
	language = {Español},
	publisher = {Pearson Education Limited},
	author = {Sommerville, I.},
	year = {2002}
}

@book{booch_lenguaje_2006,
	title = {El lenguaje unificado de modelado: guía del usuario},
	isbn = {978-84-7829-076-5},
	url = {https://books.google.es/books?id=M-w2PwAACAAJ},
	publisher = {Pearson Educación},
	author = {Booch, G. and Rumbaugh, J. and Jacobson, I. and Molina, J. J. G. and Martínez, J. S.},
	year = {2006}
}

@book{larman_uml_2003,
	title = {{UML} y patrones: una introducción al análisis y diseño orientado a objetos y al proceso unificado},
	isbn = {978-84-205-3438-1},
	url = {https://books.google.es/books?id=3NEaPwAACAAJ},
	publisher = {Pearson Educación},
	author = {Larman, C. and Valle, B. M.},
	year = {2003}
}

@misc{ubu_plantilla_2019,
	title = {Plantilla {Latex}. {Contribute} to ubutfgm/{plantillaLatex} development by creating an account on {GitHub}},
	url = {https://github.com/ubutfgm/plantillaLatex},
	urldate = {2019-07-01},
	author = {UBU, TFGM\_GII},
	month = jun,
	year = {2019},
	note = {original-date: 2016-10-14T10:17:24Z}
}